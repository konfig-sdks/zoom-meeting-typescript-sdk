/* tslint:disable */
/* eslint-disable */
/*
Zoom Meeting API

The Zoom Meeting APIs let developers to access information from Zoom. 

The version of the OpenAPI document: 2


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import globalAxios, { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { Configuration } from '../configuration';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction, isBrowser } from '../common';
import { fromBuffer } from "file-type/browser"
const FormData = require("form-data")
import { setOAuthToObject } from '../common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from '../base';
// @ts-ignore
import { SipPhoneEnableUserSipPhoneRequest } from '../models';
// @ts-ignore
import { SipPhoneEnableUserSipPhoneResponse } from '../models';
// @ts-ignore
import { SipPhoneListResponse } from '../models';
// @ts-ignore
import { SipPhoneUpdateSpecificPhoneRequest } from '../models';
import { paginate } from "../pagination/paginate";
import type * as buffer from "buffer"
import { requestBeforeHook } from '../requestBeforeHook';
/**
 * SipPhoneApi - axios parameter creator
 * @export
 */
export const SipPhoneApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Use this API to delete a Zoom account\'s SIP phone.    **Prerequisites**:  * Currently only supported on Cisco and Avaya PBX systems.  * The user must enable **SIP Phone Integration** by contacting the [Zoom Sales](https://zoom.us/contactsales) team.  **Scopes:** `sip_phone:write:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
         * @summary Delete SIP phone
         * @param {string} phoneId The SIP phone ID. It can be retrieved from the List SIP Phones API.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deletePhone: async (phoneId: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'phoneId' is not null or undefined
            assertParamExists('deletePhone', 'phoneId', phoneId)
            const localVarPath = `/sip_phones/{phoneId}`
                .replace(`{${"phoneId"}}`, encodeURIComponent(String(phoneId !== undefined ? phoneId : `-phoneId-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication openapi_authorization required
            await setApiKeyToObject({ object: localVarHeaderParameter, key: "Authorization", keyParamName: "openapiAuthorization", configuration })
            // authentication openapi_oauth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "openapi_oauth", ["sip_phone:write:admin"], configuration)

    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/sip_phones/{phoneId}',
                httpMethod: 'DELETE'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Zoom\'s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to enable a user to use SIP phone.          **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.       **Scopes:** `sip_phone:write:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
         * @summary Enable SIP phone
         * @param {SipPhoneEnableUserSipPhoneRequest} [sipPhoneEnableUserSipPhoneRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        enableUserSipPhone: async (sipPhoneEnableUserSipPhoneRequest?: SipPhoneEnableUserSipPhoneRequest, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/sip_phones`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication openapi_authorization required
            await setApiKeyToObject({ object: localVarHeaderParameter, key: "Authorization", keyParamName: "openapiAuthorization", configuration })
            // authentication openapi_oauth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "openapi_oauth", ["sip_phone:write:admin"], configuration)

    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: sipPhoneEnableUserSipPhoneRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/sip_phones',
                httpMethod: 'POST'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(sipPhoneEnableUserSipPhoneRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Zoom\'s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to list SIP phones on an account.          **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.       **Scopes:** `sip_phone:read:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
         * @summary List SIP phones
         * @param {number} [pageNumber] **Deprecated.** We will no longer support this field in a future release. Instead, use the &#x60;next_page_token&#x60; for pagination.
         * @param {string} [searchKey] User name or email address of a user. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned.
         * @param {number} [pageSize] The number of records returned within a single API call.
         * @param {string} [nextPageToken] The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        list: async (pageNumber?: number, searchKey?: string, pageSize?: number, nextPageToken?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/sip_phones`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication openapi_authorization required
            await setApiKeyToObject({ object: localVarHeaderParameter, key: "Authorization", keyParamName: "openapiAuthorization", configuration })
            // authentication openapi_oauth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "openapi_oauth", ["sip_phone:read:admin"], configuration)
            if (pageNumber !== undefined) {
                localVarQueryParameter['page_number'] = pageNumber;
            }

            if (searchKey !== undefined) {
                localVarQueryParameter['search_key'] = searchKey;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['page_size'] = pageSize;
            }

            if (nextPageToken !== undefined) {
                localVarQueryParameter['next_page_token'] = nextPageToken;
            }


    
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/sip_phones',
                httpMethod: 'GET'
            });

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Zoom\'s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to update information of a specific SIP Phone on a Zoom account.          **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.       **Scopes:** `sip_phone:write:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
         * @summary Update SIP phone
         * @param {string} phoneId The SIP phone ID. This can be retrieved from the List SIP Phones API.
         * @param {SipPhoneUpdateSpecificPhoneRequest} [sipPhoneUpdateSpecificPhoneRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSpecificPhone: async (phoneId: string, sipPhoneUpdateSpecificPhoneRequest?: SipPhoneUpdateSpecificPhoneRequest, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            // verify required parameter 'phoneId' is not null or undefined
            assertParamExists('updateSpecificPhone', 'phoneId', phoneId)
            const localVarPath = `/sip_phones/{phoneId}`
                .replace(`{${"phoneId"}}`, encodeURIComponent(String(phoneId !== undefined ? phoneId : `-phoneId-`)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions: AxiosRequestConfig = { method: 'PATCH', ...baseOptions, ...options};
            const localVarHeaderParameter = configuration && !isBrowser() ? { "User-Agent": configuration.userAgent } : {} as any;
            const localVarQueryParameter = {} as any;

            // authentication openapi_authorization required
            await setApiKeyToObject({ object: localVarHeaderParameter, key: "Authorization", keyParamName: "openapiAuthorization", configuration })
            // authentication openapi_oauth required
            // oauth required
            await setOAuthToObject(localVarHeaderParameter, "openapi_oauth", ["sip_phone:write:admin"], configuration)

    
            localVarHeaderParameter['Content-Type'] = 'application/json';


            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            requestBeforeHook({
                requestBody: sipPhoneUpdateSpecificPhoneRequest,
                queryParameters: localVarQueryParameter,
                requestConfig: localVarRequestOptions,
                path: localVarPath,
                configuration,
                pathTemplate: '/sip_phones/{phoneId}',
                httpMethod: 'PATCH'
            });
            localVarRequestOptions.data = serializeDataIfNeeded(sipPhoneUpdateSpecificPhoneRequest, localVarRequestOptions, configuration)

            setSearchParams(localVarUrlObj, localVarQueryParameter);
            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * SipPhoneApi - functional programming interface
 * @export
 */
export const SipPhoneApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = SipPhoneApiAxiosParamCreator(configuration)
    return {
        /**
         * Use this API to delete a Zoom account\'s SIP phone.    **Prerequisites**:  * Currently only supported on Cisco and Avaya PBX systems.  * The user must enable **SIP Phone Integration** by contacting the [Zoom Sales](https://zoom.us/contactsales) team.  **Scopes:** `sip_phone:write:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
         * @summary Delete SIP phone
         * @param {SipPhoneApiDeletePhoneRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deletePhone(requestParameters: SipPhoneApiDeletePhoneRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deletePhone(requestParameters.phoneId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Zoom\'s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to enable a user to use SIP phone.          **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.       **Scopes:** `sip_phone:write:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
         * @summary Enable SIP phone
         * @param {SipPhoneApiEnableUserSipPhoneRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async enableUserSipPhone(requestParameters: SipPhoneApiEnableUserSipPhoneRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SipPhoneEnableUserSipPhoneResponse>> {
            const sipPhoneEnableUserSipPhoneRequest: SipPhoneEnableUserSipPhoneRequest = {
                authorization_name: requestParameters.authorization_name,
                domain: requestParameters.domain,
                password: requestParameters.password,
                proxy_server: requestParameters.proxy_server,
                proxy_server2: requestParameters.proxy_server2,
                proxy_server3: requestParameters.proxy_server3,
                register_server: requestParameters.register_server,
                register_server2: requestParameters.register_server2,
                register_server3: requestParameters.register_server3,
                registration_expire_time: requestParameters.registration_expire_time,
                transport_protocol: requestParameters.transport_protocol,
                transport_protocol2: requestParameters.transport_protocol2,
                transport_protocol3: requestParameters.transport_protocol3,
                user_email: requestParameters.user_email,
                user_name: requestParameters.user_name,
                voice_mail: requestParameters.voice_mail
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.enableUserSipPhone(sipPhoneEnableUserSipPhoneRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Zoom\'s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to list SIP phones on an account.          **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.       **Scopes:** `sip_phone:read:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
         * @summary List SIP phones
         * @param {SipPhoneApiListRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async list(requestParameters: SipPhoneApiListRequest = {}, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SipPhoneListResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.list(requestParameters.pageNumber, requestParameters.searchKey, requestParameters.pageSize, requestParameters.nextPageToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Zoom\'s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to update information of a specific SIP Phone on a Zoom account.          **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.       **Scopes:** `sip_phone:write:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
         * @summary Update SIP phone
         * @param {SipPhoneApiUpdateSpecificPhoneRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateSpecificPhone(requestParameters: SipPhoneApiUpdateSpecificPhoneRequest, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>> {
            const sipPhoneUpdateSpecificPhoneRequest: SipPhoneUpdateSpecificPhoneRequest = {
                authorization_name: requestParameters.authorization_name,
                domain: requestParameters.domain,
                password: requestParameters.password,
                proxy_server: requestParameters.proxy_server,
                proxy_server2: requestParameters.proxy_server2,
                proxy_server3: requestParameters.proxy_server3,
                register_server: requestParameters.register_server,
                register_server2: requestParameters.register_server2,
                register_server3: requestParameters.register_server3,
                registration_expire_time: requestParameters.registration_expire_time,
                transport_protocol: requestParameters.transport_protocol,
                transport_protocol2: requestParameters.transport_protocol2,
                transport_protocol3: requestParameters.transport_protocol3,
                user_name: requestParameters.user_name,
                voice_mail: requestParameters.voice_mail
            };
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateSpecificPhone(requestParameters.phoneId, sipPhoneUpdateSpecificPhoneRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * SipPhoneApi - factory interface
 * @export
 */
export const SipPhoneApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = SipPhoneApiFp(configuration)
    return {
        /**
         * Use this API to delete a Zoom account\'s SIP phone.    **Prerequisites**:  * Currently only supported on Cisco and Avaya PBX systems.  * The user must enable **SIP Phone Integration** by contacting the [Zoom Sales](https://zoom.us/contactsales) team.  **Scopes:** `sip_phone:write:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
         * @summary Delete SIP phone
         * @param {SipPhoneApiDeletePhoneRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deletePhone(requestParameters: SipPhoneApiDeletePhoneRequest, options?: AxiosRequestConfig): AxiosPromise<void> {
            return localVarFp.deletePhone(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Zoom\'s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to enable a user to use SIP phone.          **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.       **Scopes:** `sip_phone:write:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
         * @summary Enable SIP phone
         * @param {SipPhoneApiEnableUserSipPhoneRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        enableUserSipPhone(requestParameters: SipPhoneApiEnableUserSipPhoneRequest, options?: AxiosRequestConfig): AxiosPromise<SipPhoneEnableUserSipPhoneResponse> {
            return localVarFp.enableUserSipPhone(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Zoom\'s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to list SIP phones on an account.          **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.       **Scopes:** `sip_phone:read:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
         * @summary List SIP phones
         * @param {SipPhoneApiListRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        list(requestParameters: SipPhoneApiListRequest = {}, options?: AxiosRequestConfig): AxiosPromise<SipPhoneListResponse> {
            return localVarFp.list(requestParameters, options).then((request) => request(axios, basePath));
        },
        /**
         * Zoom\'s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to update information of a specific SIP Phone on a Zoom account.          **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.       **Scopes:** `sip_phone:write:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
         * @summary Update SIP phone
         * @param {SipPhoneApiUpdateSpecificPhoneRequest} requestParameters Request parameters.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSpecificPhone(requestParameters: SipPhoneApiUpdateSpecificPhoneRequest, options?: AxiosRequestConfig): AxiosPromise<void> {
            return localVarFp.updateSpecificPhone(requestParameters, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for deletePhone operation in SipPhoneApi.
 * @export
 * @interface SipPhoneApiDeletePhoneRequest
 */
export type SipPhoneApiDeletePhoneRequest = {
    
    /**
    * The SIP phone ID. It can be retrieved from the List SIP Phones API.
    * @type {string}
    * @memberof SipPhoneApiDeletePhone
    */
    readonly phoneId: string
    
}

/**
 * Request parameters for enableUserSipPhone operation in SipPhoneApi.
 * @export
 * @interface SipPhoneApiEnableUserSipPhoneRequest
 */
export type SipPhoneApiEnableUserSipPhoneRequest = {
    
} & SipPhoneEnableUserSipPhoneRequest

/**
 * Request parameters for list operation in SipPhoneApi.
 * @export
 * @interface SipPhoneApiListRequest
 */
export type SipPhoneApiListRequest = {
    
    /**
    * **Deprecated.** We will no longer support this field in a future release. Instead, use the `next_page_token` for pagination.
    * @type {number}
    * @memberof SipPhoneApiList
    */
    readonly pageNumber?: number
    
    /**
    * User name or email address of a user. If this parameter is provided, only the SIP phone system integration enabled for that specific user will be returned. Otherwise, all SIP phones on an account will be returned.
    * @type {string}
    * @memberof SipPhoneApiList
    */
    readonly searchKey?: string
    
    /**
    * The number of records returned within a single API call.
    * @type {number}
    * @memberof SipPhoneApiList
    */
    readonly pageSize?: number
    
    /**
    * The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.
    * @type {string}
    * @memberof SipPhoneApiList
    */
    readonly nextPageToken?: string
    
}

/**
 * Request parameters for updateSpecificPhone operation in SipPhoneApi.
 * @export
 * @interface SipPhoneApiUpdateSpecificPhoneRequest
 */
export type SipPhoneApiUpdateSpecificPhoneRequest = {
    
    /**
    * The SIP phone ID. This can be retrieved from the List SIP Phones API.
    * @type {string}
    * @memberof SipPhoneApiUpdateSpecificPhone
    */
    readonly phoneId: string
    
} & SipPhoneUpdateSpecificPhoneRequest

/**
 * SipPhoneApiGenerated - object-oriented interface
 * @export
 * @class SipPhoneApiGenerated
 * @extends {BaseAPI}
 */
export class SipPhoneApiGenerated extends BaseAPI {
    /**
     * Use this API to delete a Zoom account\'s SIP phone.    **Prerequisites**:  * Currently only supported on Cisco and Avaya PBX systems.  * The user must enable **SIP Phone Integration** by contacting the [Zoom Sales](https://zoom.us/contactsales) team.  **Scopes:** `sip_phone:write:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
     * @summary Delete SIP phone
     * @param {SipPhoneApiDeletePhoneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SipPhoneApiGenerated
     */
    public deletePhone(requestParameters: SipPhoneApiDeletePhoneRequest, options?: AxiosRequestConfig) {
        return SipPhoneApiFp(this.configuration).deletePhone(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Zoom\'s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to enable a user to use SIP phone.          **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.       **Scopes:** `sip_phone:write:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
     * @summary Enable SIP phone
     * @param {SipPhoneApiEnableUserSipPhoneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SipPhoneApiGenerated
     */
    public enableUserSipPhone(requestParameters: SipPhoneApiEnableUserSipPhoneRequest, options?: AxiosRequestConfig) {
        return SipPhoneApiFp(this.configuration).enableUserSipPhone(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Zoom\'s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to list SIP phones on an account.          **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * User must enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.       **Scopes:** `sip_phone:read:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`
     * @summary List SIP phones
     * @param {SipPhoneApiListRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SipPhoneApiGenerated
     */
    public list(requestParameters: SipPhoneApiListRequest = {}, options?: AxiosRequestConfig) {
        return SipPhoneApiFp(this.configuration).list(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Zoom\'s Phone System Integration (PSI), also referred as SIP phones, enables an organization to leverage the Zoom client to complete a softphone registration to supported premise based PBX system. End users will have the ability to have softphone functionality within a single client while maintaining a comparable interface to Zoom Phone. Use this API to update information of a specific SIP Phone on a Zoom account.          **Prerequisites**: * Currently only supported on Cisco and Avaya PBX systems.  * The account owner or account admin must first enable SIP Phone Integration by contacting the [Sales](https://zoom.us/contactsales) team.       **Scopes:** `sip_phone:write:admin`  **[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`
     * @summary Update SIP phone
     * @param {SipPhoneApiUpdateSpecificPhoneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SipPhoneApiGenerated
     */
    public updateSpecificPhone(requestParameters: SipPhoneApiUpdateSpecificPhoneRequest, options?: AxiosRequestConfig) {
        return SipPhoneApiFp(this.configuration).updateSpecificPhone(requestParameters, options).then((request) => request(this.axios, this.basePath));
    }
}
