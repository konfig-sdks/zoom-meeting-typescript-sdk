/*
Zoom Meeting API

The Zoom Meeting APIs let developers to access information from Zoom. 

The version of the OpenAPI document: 2


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"


/**
 * 
 * @export
 * @interface MeetingsGetPastMeetingParticipantsResponseParticipantsInner
 */
export interface MeetingsGetPastMeetingParticipantsResponseParticipantsInner {
    /**
     * Universally unique identifier of the Participant. It is the same as the User ID of the participant if the participant joins the meeting by logging into Zoom. If the participant joins the meeting without logging in, the value of this field will be blank.
     * @type {string}
     * @memberof MeetingsGetPastMeetingParticipantsResponseParticipantsInner
     */
    'id'?: string;
    /**
     * Participant display name.
     * @type {string}
     * @memberof MeetingsGetPastMeetingParticipantsResponseParticipantsInner
     */
    'name'?: string;
    /**
     * Participant ID. This is a unique ID assigned to the participant joining a meeting and is valid for that meeting only.
     * @type {string}
     * @memberof MeetingsGetPastMeetingParticipantsResponseParticipantsInner
     */
    'user_id'?: string;
    /**
     * The participant\'s unique registrant ID. This field only returns if you pass the `registrant_id` value for the `include_fields` query parameter.   This field does not return if the `type` query parameter is the `live` value.
     * @type {string}
     * @memberof MeetingsGetPastMeetingParticipantsResponseParticipantsInner
     */
    'registrant_id'?: string;
    /**
     * Email address of the user. If the participant is **not** part of the host\'s account, this returns an empty string value, with some exceptions. See [Email address display rules](https://developers.zoom.us/docs/api/rest/using-zoom-apis/#email-address-display-rules) for details.
     * @type {string}
     * @memberof MeetingsGetPastMeetingParticipantsResponseParticipantsInner
     */
    'user_email'?: string;
    /**
     * Participant join time.
     * @type {string}
     * @memberof MeetingsGetPastMeetingParticipantsResponseParticipantsInner
     */
    'join_time'?: string;
    /**
     * Participant leave time.
     * @type {string}
     * @memberof MeetingsGetPastMeetingParticipantsResponseParticipantsInner
     */
    'leave_time'?: string;
    /**
     * Participant duration. Duration, in seconds, calculated by subtracting the `leave_time` from the `join_time` for the `user_id`. If the participant leaves and rejoins the same meeting, they will be assigned a different `user_id` and Zoom displays their new duration in a separate object. Note that because of this, the duration may not reflect the total time the user was in the meeting.
     * @type {number}
     * @memberof MeetingsGetPastMeetingParticipantsResponseParticipantsInner
     */
    'duration'?: number;
    /**
     * Indicates if failover happened during the meeting.
     * @type {boolean}
     * @memberof MeetingsGetPastMeetingParticipantsResponseParticipantsInner
     */
    'failover'?: boolean;
    /**
     * The participant\'s status.  * `in_meeting` - In a meeting.  * `in_waiting_room` - In a waiting room.
     * @type {string}
     * @memberof MeetingsGetPastMeetingParticipantsResponseParticipantsInner
     */
    'status'?: MeetingsGetPastMeetingParticipantsResponseParticipantsInnerStatusEnum;
}

type MeetingsGetPastMeetingParticipantsResponseParticipantsInnerStatusEnum = 'in_meeting' | 'in_waiting_room'


